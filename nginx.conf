# https://stackoverflow.com/questions/5009324/node-js-nginx-what-now

events {
  worker_connections      768;
}

http {
  sendfile                on;
  tcp_nopush              on;
  tcp_nodelay             on;
  keepalive_timeout       65;
  types_hash_max_size     2048;
  include                 /etc/nginx/mime.types;
  default_type            application/octet-stream;

  access_log              /var/log/app_engine/app.log; # Logs will appear on the Google Developer's Console when logged to this directory.
  error_log               /var/log/app_engine/app.log;

  gzip                    on;
  gzip_disable            "msie6";
  gzip_types              text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level         9;

  #                       Redirect all HTTP requests to HTTPS
  server {
    listen                80;
    server_name           webduet.app;

    proxy_http_version    1.1;
    proxy_set_header      Host $host;
    proxy_set_header      Connection "";

    location / {
      return              301 https://$server_name$request_uri;
    }

		location /* {
      return              301 https://$server_name$request_uri;
		}
  }

	# Google App Engine expects the runtime to serve HTTP traffic from port 8080.
  server {
    listen                8080;
    root                  /usr/share/nginx/www/web-duet;
    index                 index.html;
  }
	
  server {
    listen                443 ssl;
    server_name           webduet.app;

    location / {
      proxy_pass          http://localhost:8080;
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection 'upgrade';
      proxy_set_header    Host $host;
      proxy_cache_bypass  $http_upgrade;
    }
  }
}

# CONFIG START websocket
map $http_upgrade $connection_upgrade {
  default                 upgrade;
  ''                      close;
}

upstream client {
  server                  client:4200
}

server {
  listen                  8080;
  location / {
    proxy_pass            http://websocket;
    proxy_http_version    1.1;
    proxy_set_header      Upgrade $http_upgrade;
    proxy_set_header      Connection $connection_upgrade;
    proxy_set_header      Host $host;
  }
}
# CONFIG END websocket
